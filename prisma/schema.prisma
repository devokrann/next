// npx prisma migrate dev --name init -> sync database
// npx prisma db push -> sync database

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["postgresqlExtensions"] // enables postgresql extensions
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // uses connection pooling
  // directUrl = env("DIRECT_URL") // uses a direct connection
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  verified  Boolean  @default(false)
  firstName String?  @map(name: "first_name")
  lastName  String?  @map(name: "last_name")
  role      Role     @default(USER)
  posts     Post[]
  otps      Otp[]
  profile   Profile?

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

model Profile {
  id        Int      @id @default(autoincrement())
  bio       String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique @map("user_id")

  @@map("profiles")
}

model Post {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  published   Boolean   @default(false)
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @updatedAt @map(name: "updated_at")
  user        User      @relation(fields: [userId], references: [id])
  userId      Int       @unique @map("user_id")
  category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?      @unique @map("category_id")

  @@unique([userId, title])
  @@map(name: "posts")
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String
  posts Post[]

  @@map(name: "categories")
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  otp       String
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")
  expiresAt DateTime @updatedAt @map(name: "expires_at")
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique @map("user_id")

  @@map(name: "otps")
}
